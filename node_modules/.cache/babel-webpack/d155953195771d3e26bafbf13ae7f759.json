{"ast":null,"code":"import _regeneratorRuntime from \"C:/dP-It/app/ionic/apps/ionic4-push/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/dP-It/app/ionic/apps/ionic4-push/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar attachComponent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(delegate, container, component, cssClasses, componentProps) {\n    var el;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!delegate) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", delegate.attachViewToDom(container, component, componentProps, cssClasses));\n\n          case 2:\n            if (!(typeof component !== 'string' && !(component instanceof HTMLElement))) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('framework delegate is missing');\n\n          case 4:\n            el = typeof component === 'string' ? container.ownerDocument && container.ownerDocument.createElement(component) : component;\n\n            if (cssClasses) {\n              cssClasses.forEach(function (c) {\n                return el.classList.add(c);\n              });\n            }\n\n            if (componentProps) {\n              Object.assign(el, componentProps);\n            }\n\n            container.appendChild(el);\n\n            if (!el.componentOnReady) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 11;\n            return el.componentOnReady();\n\n          case 11:\n            return _context.abrupt(\"return\", el);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function attachComponent(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar detachComponent = function detachComponent(delegate, element) {\n  if (element) {\n    if (delegate) {\n      var container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n\n    element.remove();\n  }\n\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };","map":null,"metadata":{},"sourceType":"module"}