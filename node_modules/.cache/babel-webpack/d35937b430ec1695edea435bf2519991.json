{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar StatusBar =\n/** @class */\nfunction (_super) {\n  __extends(StatusBar, _super);\n\n  function StatusBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StatusBar.prototype.overlaysWebView = function (doesOverlay) {\n    return cordova(this, \"overlaysWebView\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.styleDefault = function () {\n    return cordova(this, \"styleDefault\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.styleLightContent = function () {\n    return cordova(this, \"styleLightContent\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.styleBlackTranslucent = function () {\n    return cordova(this, \"styleBlackTranslucent\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.styleBlackOpaque = function () {\n    return cordova(this, \"styleBlackOpaque\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.backgroundColorByName = function (colorName) {\n    return cordova(this, \"backgroundColorByName\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.backgroundColorByHexString = function (hexString) {\n    return cordova(this, \"backgroundColorByHexString\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.hide = function () {\n    return cordova(this, \"hide\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  StatusBar.prototype.show = function () {\n    return cordova(this, \"show\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Object.defineProperty(StatusBar.prototype, \"isVisible\", {\n    get: function get() {\n      return cordovaPropertyGet(this, \"isVisible\");\n    },\n    set: function set(value) {\n      cordovaPropertySet(this, \"isVisible\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  StatusBar.pluginName = \"StatusBar\";\n  StatusBar.plugin = \"cordova-plugin-statusbar\";\n  StatusBar.pluginRef = \"StatusBar\";\n  StatusBar.repo = \"https://github.com/apache/cordova-plugin-statusbar\";\n  StatusBar.platforms = [\"Android\", \"iOS\", \"Windows\"];\n\n  StatusBar.ɵfac = function StatusBar_Factory(t) {\n    return ɵStatusBar_BaseFactory(t || StatusBar);\n  };\n\n  StatusBar.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n    token: StatusBar,\n    factory: function factory(t) {\n      return StatusBar.ɵfac(t);\n    }\n  });\n  var ɵStatusBar_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(StatusBar);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(StatusBar, [{\n      type: Injectable\n    }], null, null);\n  })();\n\n  return StatusBar;\n}(IonicNativePlugin);\n\nexport { StatusBar };","map":{"version":3,"sources":["../../../../../src/@ionic-native/plugins/status-bar/ngx/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, CordovaProperty, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Status Bar\n * @premier statusbar\n * @capacitorincompatible true\n * @description\n * Manage the appearance of the native status bar.\n *\n * Requires Cordova plugin: `cordova-plugin-statusbar`. For more info, please see the [StatusBar plugin docs](https://github.com/apache/cordova-plugin-statusbar).\n *\n * @usage\n * ```typescript\n * import { StatusBar } from '@ionic-native/status-bar/ngx';\n *\n * constructor(private statusBar: StatusBar) { }\n *\n * ...\n *\n * // let status bar overlay webview\n * this.statusBar.overlaysWebView(true);\n *\n * // set status bar to white\n * this.statusBar.backgroundColorByHexString('#ffffff');\n * ```\n *\n */\n@Plugin({\n  pluginName: 'StatusBar',\n  plugin: 'cordova-plugin-statusbar',\n  pluginRef: 'StatusBar',\n  repo: 'https://github.com/apache/cordova-plugin-statusbar',\n  platforms: ['Android', 'iOS', 'Windows'],\n})\n@Injectable()\nexport class StatusBar extends IonicNativePlugin {\n  /**\n   * Whether the StatusBar is currently visible or not.\n   */\n  @CordovaProperty()\n  isVisible: boolean;\n\n  /**\n   * Set whether the status bar overlays the main app view. The default\n   * is true.\n   *\n   * @param {boolean} doesOverlay  Whether the status bar overlays the main app view.\n   */\n  @Cordova({\n    sync: true,\n  })\n  overlaysWebView(doesOverlay: boolean) {}\n\n  /**\n   * Use the default statusbar (dark text, for light backgrounds).\n   */\n  @Cordova({\n    sync: true,\n  })\n  styleDefault() {}\n\n  /**\n   * Use the lightContent statusbar (light text, for dark backgrounds).\n   */\n  @Cordova({\n    sync: true,\n  })\n  styleLightContent() {}\n\n  /**\n   * Use the blackTranslucent statusbar (light text, for dark backgrounds).\n   */\n  @Cordova({\n    sync: true,\n  })\n  styleBlackTranslucent() {}\n\n  /**\n   * Use the blackOpaque statusbar (light text, for dark backgrounds).\n   */\n  @Cordova({\n    sync: true,\n  })\n  styleBlackOpaque() {}\n\n  /**\n   * Set the status bar to a specific named color. Valid options:\n   * black, darkGray, lightGray, white, gray, red, green, blue, cyan, yellow, magenta, orange, purple, brown.\n   *\n   * iOS note: you must call StatusBar.overlaysWebView(false) to enable color changing.\n   *\n   * @param {string} colorName  The name of the color (from above)\n   */\n  @Cordova({\n    sync: true,\n  })\n  backgroundColorByName(colorName: string) {}\n\n  /**\n   * Set the status bar to a specific hex color (CSS shorthand supported!).\n   *\n   * iOS note: you must call StatusBar.overlaysWebView(false) to enable color changing.\n   *\n   * @param {string} hexString  The hex value of the color.\n   */\n  @Cordova({\n    sync: true,\n  })\n  backgroundColorByHexString(hexString: string) {}\n\n  /**\n   * Hide the StatusBar\n   */\n  @Cordova({\n    sync: true,\n  })\n  hide() {}\n\n  /**\n   * Show the StatusBar\n   */\n  @Cordova({\n    sync: true,\n  })\n  show() {}\n}\n"]},"metadata":{},"sourceType":"module"}