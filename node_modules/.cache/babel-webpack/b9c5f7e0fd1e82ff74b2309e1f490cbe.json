{"ast":null,"code":"import { G as GESTURE_CONTROLLER } from './gesture-controller-89173521.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller-89173521.js';\n\nvar addEventListener = function addEventListener(el, eventName, callback, opts) {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  var listenerOpts = supportsPassive(el) ? {\n    'capture': !!opts.capture,\n    'passive': !!opts.passive\n  } : !!opts.capture;\n  var add;\n  var remove;\n\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  } else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n\n  el[add](eventName, callback, listenerOpts);\n  return function () {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\n\nvar supportsPassive = function supportsPassive(node) {\n  if (_sPassive === undefined) {\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _sPassive = true;\n        }\n      });\n      node.addEventListener('optsTest', function () {\n        return;\n      }, opts);\n    } catch (e) {\n      _sPassive = false;\n    }\n  }\n\n  return !!_sPassive;\n};\n\nvar _sPassive;\n\nvar MOUSE_WAIT = 2000;\n\nvar createPointerEvents = function createPointerEvents(el, pointerDown, pointerMove, pointerUp, options) {\n  var rmTouchStart;\n  var rmTouchMove;\n  var rmTouchEnd;\n  var rmTouchCancel;\n  var rmMouseStart;\n  var rmMouseMove;\n  var rmMouseUp;\n  var lastTouchEvent = 0;\n\n  var handleTouchStart = function handleTouchStart(ev) {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n    }\n\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(ev) {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n\n  var handleTouchEnd = function handleTouchEnd(ev) {\n    stopTouch();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  var handleMouseUp = function handleMouseUp(ev) {\n    stopMouse();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  var stopTouch = function stopTouch() {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n\n  var stopMouse = function stopMouse() {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n\n    rmMouseMove = rmMouseUp = undefined;\n  };\n\n  var stop = function stop() {\n    stopTouch();\n    stopMouse();\n  };\n\n  var enable = function enable() {\n    var isEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    } else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n\n  var destroy = function destroy() {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n\n  return {\n    enable: enable,\n    stop: stop,\n    destroy: destroy\n  };\n};\n\nvar getDocument = function getDocument(node) {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nvar createPanRecognizer = function createPanRecognizer(direction, thresh, maxAngle) {\n  var radians = maxAngle * (Math.PI / 180);\n  var isDirX = direction === 'x';\n  var maxCosine = Math.cos(radians);\n  var threshold = thresh * thresh;\n  var startX = 0;\n  var startY = 0;\n  var dirty = false;\n  var isPan = 0;\n  return {\n    start: function start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect: function detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n\n      var deltaX = x - startX;\n      var deltaY = y - startY;\n      var distance = deltaX * deltaX + deltaY * deltaY;\n\n      if (distance < threshold) {\n        return false;\n      }\n\n      var hypotenuse = Math.sqrt(distance);\n      var cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n\n      if (cosine > maxCosine) {\n        isPan = 1;\n      } else if (cosine < -maxCosine) {\n        isPan = -1;\n      } else {\n        isPan = 0;\n      }\n\n      dirty = false;\n      return true;\n    },\n    isGesture: function isGesture() {\n      return isPan !== 0;\n    },\n    getDirection: function getDirection() {\n      return isPan;\n    }\n  };\n};\n\nvar createGesture = function createGesture(config) {\n  var hasCapturedPan = false;\n  var hasStartedPan = false;\n  var hasFiredStart = true;\n  var isMoveQueued = false;\n  var finalConfig = Object.assign({\n    disableScroll: false,\n    direction: 'x',\n    gesturePriority: 0,\n    passive: true,\n    maxAngle: 40,\n    threshold: 10\n  }, config);\n  var canStart = finalConfig.canStart;\n  var onWillStart = finalConfig.onWillStart;\n  var onStart = finalConfig.onStart;\n  var onEnd = finalConfig.onEnd;\n  var notCaptured = finalConfig.notCaptured;\n  var onMove = finalConfig.onMove;\n  var threshold = finalConfig.threshold;\n  var passive = finalConfig.passive;\n  var blurOnStart = finalConfig.blurOnStart;\n  var detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined\n  };\n  var pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  var gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll\n  });\n\n  var pointerDown = function pointerDown(ev) {\n    var timeStamp = now(ev);\n\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev; // Check if gesture can start\n\n    if (canStart && canStart(detail) === false) {\n      return false;\n    } // Release fallback\n\n\n    gesture.release(); // Start gesture\n\n    if (!gesture.start()) {\n      return false;\n    }\n\n    hasStartedPan = true;\n\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n\n  var pointerMove = function pointerMove(ev) {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n\n      return;\n    } // gesture is currently being detected\n\n\n    calcGestureData(detail, ev);\n\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n\n  var fireOnMove = function fireOnMove() {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n\n    isMoveQueued = false;\n\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n\n  var tryToCapturePan = function tryToCapturePan() {\n    if (gesture && !gesture.capture()) {\n      return false;\n    }\n\n    hasCapturedPan = true;\n    hasFiredStart = false; // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    } else {\n      fireOnStart();\n    }\n\n    return true;\n  };\n\n  var blurActiveElement = function blurActiveElement() {\n    /* tslint:disable-next-line */\n    if (typeof document !== 'undefined') {\n      var activeElement = document.activeElement;\n\n      if (activeElement !== null && activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n\n  var fireOnStart = function fireOnStart() {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n\n    if (onStart) {\n      onStart(detail);\n    }\n\n    hasFiredStart = true;\n  };\n\n  var reset = function reset() {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  }; // END *************************\n\n\n  var pointerUp = function pointerUp(ev) {\n    var tmpHasCaptured = hasCapturedPan;\n    var tmpHasFiredStart = hasFiredStart;\n    reset();\n\n    if (!tmpHasFiredStart) {\n      return;\n    }\n\n    calcGestureData(detail, ev); // Try to capture press\n\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n\n      return;\n    } // Not captured any event\n\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  var pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive: passive\n  });\n\n  var abortGesture = function abortGesture() {\n    reset();\n    pointerEvents.stop();\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  return {\n    enable: function enable() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n\n        reset();\n      }\n\n      pointerEvents.enable(enable);\n    },\n    destroy: function destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    }\n  };\n};\n\nvar calcGestureData = function calcGestureData(detail, ev) {\n  if (!ev) {\n    return;\n  }\n\n  var prevX = detail.currentX;\n  var prevY = detail.currentY;\n  var prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  var currentX = detail.currentX;\n  var currentY = detail.currentY;\n  var timestamp = detail.currentTime = now(ev);\n  var timeDelta = timestamp - prevT;\n\n  if (timeDelta > 0 && timeDelta < 100) {\n    var velocityX = (currentX - prevX) / timeDelta;\n    var velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\n\nvar updateDetail = function updateDetail(ev, detail) {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  var x = 0;\n  var y = 0;\n\n  if (ev) {\n    var changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      var touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    } else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n\n  detail.currentX = x;\n  detail.currentY = y;\n};\n\nvar now = function now(ev) {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };","map":{"version":3,"sources":["C:/dP-It/app/ionic/apps/dP Tennismanager/node_modules/@ionic/core/dist/esm/index-eea61379.js"],"names":["G","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","opts","listenerOpts","supportsPassive","capture","passive","add","remove","node","_sPassive","undefined","Object","defineProperty","get","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","destroy","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","Math","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","start","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","createGesture","config","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","disableScroll","gesturePriority","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","detail","type","startTime","currentX","currentY","velocityX","velocityY","currentTime","event","data","pan","gesture","name","gestureName","priority","timeStamp","updateDetail","release","tryToCapturePan","calcGestureData","requestAnimationFrame","fireOnMove","abortGesture","then","fireOnStart","blurActiveElement","document","activeElement","blur","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"mappings":"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","sourcesContent":["import { G as GESTURE_CONTROLLER } from './gesture-controller-89173521.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller-89173521.js';\n\nconst addEventListener = (el, eventName, callback, opts) => {\n    // use event listener options when supported\n    // otherwise it's just a boolean for the \"capture\" arg\n    const listenerOpts = supportsPassive(el) ? {\n        'capture': !!opts.capture,\n        'passive': !!opts.passive,\n    } : !!opts.capture;\n    let add;\n    let remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return () => {\n        el[remove](eventName, callback, listenerOpts);\n    };\n};\nconst supportsPassive = (node) => {\n    if (_sPassive === undefined) {\n        try {\n            const opts = Object.defineProperty({}, 'passive', {\n                get: () => {\n                    _sPassive = true;\n                }\n            });\n            node.addEventListener('optsTest', () => { return; }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n    let rmTouchStart;\n    let rmTouchMove;\n    let rmTouchEnd;\n    let rmTouchCancel;\n    let rmMouseStart;\n    let rmMouseMove;\n    let rmMouseUp;\n    let lastTouchEvent = 0;\n    const handleTouchStart = (ev) => {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n        }\n    };\n    const handleMouseDown = (ev) => {\n        if (lastTouchEvent > Date.now()) {\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    };\n    const handleTouchEnd = (ev) => {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const handleMouseUp = (ev) => {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const stopTouch = () => {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    };\n    const stopMouse = () => {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    };\n    const stop = () => {\n        stopTouch();\n        stopMouse();\n    };\n    const enable = (isEnabled = true) => {\n        if (!isEnabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    };\n    const destroy = () => {\n        enable(false);\n        pointerUp = pointerMove = pointerDown = undefined;\n    };\n    return {\n        enable,\n        stop,\n        destroy\n    };\n};\nconst getDocument = (node) => {\n    return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n    const radians = maxAngle * (Math.PI / 180);\n    const isDirX = direction === 'x';\n    const maxCosine = Math.cos(radians);\n    const threshold = thresh * thresh;\n    let startX = 0;\n    let startY = 0;\n    let dirty = false;\n    let isPan = 0;\n    return {\n        start(x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect(x, y) {\n            if (!dirty) {\n                return false;\n            }\n            const deltaX = (x - startX);\n            const deltaY = (y - startY);\n            const distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            const hypotenuse = Math.sqrt(distance);\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture() {\n            return isPan !== 0;\n        },\n        getDirection() {\n            return isPan;\n        }\n    };\n};\n\nconst createGesture = (config) => {\n    let hasCapturedPan = false;\n    let hasStartedPan = false;\n    let hasFiredStart = true;\n    let isMoveQueued = false;\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    const canStart = finalConfig.canStart;\n    const onWillStart = finalConfig.onWillStart;\n    const onStart = finalConfig.onStart;\n    const onEnd = finalConfig.onEnd;\n    const notCaptured = finalConfig.notCaptured;\n    const onMove = finalConfig.onMove;\n    const threshold = finalConfig.threshold;\n    const passive = finalConfig.passive;\n    const blurOnStart = finalConfig.blurOnStart;\n    const detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTime: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        currentTime: 0,\n        event: undefined,\n        data: undefined\n    };\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    const gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll\n    });\n    const pointerDown = (ev) => {\n        const timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        // Check if gesture can start\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        // Release fallback\n        gesture.release();\n        // Start gesture\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    };\n    const pointerMove = (ev) => {\n        // fast path, if gesture is currently captured\n        // do minimum job to get user-land even dispatched\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                requestAnimationFrame(fireOnMove);\n            }\n            return;\n        }\n        // gesture is currently being detected\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    };\n    const fireOnMove = () => {\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\n        // we must double check hasCapturedPan\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    };\n    const tryToCapturePan = () => {\n        if (gesture && !gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        // reset start position since the real user-land event starts here\n        // If the pan detector threshold is big, not resetting the start position\n        // will cause a jump in the animation equal to the detector threshold.\n        // the array of positions used to calculate the gesture velocity does not\n        // need to be cleaned, more points in the positions array always results in a\n        // more accurate value of the velocity.\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    };\n    const blurActiveElement = () => {\n        /* tslint:disable-next-line */\n        if (typeof document !== 'undefined') {\n            const activeElement = document.activeElement;\n            if (activeElement !== null && activeElement.blur) {\n                activeElement.blur();\n            }\n        }\n    };\n    const fireOnStart = () => {\n        if (blurOnStart) {\n            blurActiveElement();\n        }\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    };\n    const reset = () => {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    };\n    // END *************************\n    const pointerUp = (ev) => {\n        const tmpHasCaptured = hasCapturedPan;\n        const tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        // Try to capture press\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        // Not captured any event\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        capture: false,\n        passive\n    });\n    const abortGesture = () => {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    return {\n        enable(enable = true) {\n            if (!enable) {\n                if (hasCapturedPan) {\n                    pointerUp(undefined);\n                }\n                reset();\n            }\n            pointerEvents.enable(enable);\n        },\n        destroy() {\n            gesture.destroy();\n            pointerEvents.destroy();\n        }\n    };\n};\nconst calcGestureData = (detail, ev) => {\n    if (!ev) {\n        return;\n    }\n    const prevX = detail.currentX;\n    const prevY = detail.currentY;\n    const prevT = detail.currentTime;\n    updateDetail(ev, detail);\n    const currentX = detail.currentX;\n    const currentY = detail.currentY;\n    const timestamp = detail.currentTime = now(ev);\n    const timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        const velocityX = (currentX - prevX) / timeDelta;\n        const velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    let x = 0;\n    let y = 0;\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n"]},"metadata":{},"sourceType":"module"}