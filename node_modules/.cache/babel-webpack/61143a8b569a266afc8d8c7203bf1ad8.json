{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { IonicNativePlugin } from '@ionic-native/core';\n\nfunction FCM() {}\n\nFCM.prototype.clearAllNotifications = function () {\n  return window.FCM.clearAllNotifications();\n};\n\nFCM.prototype.createNotificationChannel = function (channelConfig) {\n  return window.FCM.createNotificationChannel(channelConfig);\n};\n\nFCM.prototype.getAPNSToken = function () {\n  return window.FCM.getAPNSToken();\n};\n\nFCM.prototype.getInitialPushPayload = function () {\n  return window.FCM.getInitialPushPayload();\n};\n\nFCM.prototype.getToken = function () {\n  return window.FCM.getToken();\n};\n\nFCM.prototype.hasPermission = function () {\n  return window.FCM.hasPermission();\n};\n\nFCM.prototype.onNotification = function (options) {\n  var observable = new Subject();\n\n  var handler = function handler(payload) {\n    return observable.next(payload);\n  };\n\n  window.FCM.onNotification(handler, options);\n  return observable;\n};\n\nFCM.prototype.onTokenRefresh = function (options) {\n  var observable = new Subject();\n  window.FCM.onTokenRefresh(function (token) {\n    return observable.next(token);\n  }, options);\n  return observable;\n};\n\nFCM.prototype.requestPushPermission = function (options) {\n  return window.FCM.requestPushPermission(options);\n};\n\nFCM.prototype.subscribeToTopic = function (topic) {\n  return window.FCM.subscribeToTopic(topic);\n};\n\nFCM.prototype.unsubscribeFromTopic = function (topic) {\n  return window.FCM.unsubscribeFromTopic(topic);\n};\n\nFCM.pluginName = 'FCM';\nFCM.plugin = 'cordova-plugin-fcm-with-dependecy-updated';\nFCM.pluginRef = 'FCM';\nFCM.repo = 'https://github.com/andrehtissot/cordova-plugin-fcm-with-dependecy-updated';\nFCM.platforms = ['Android', 'iOS'];\nFCM.installed = IonicNativePlugin.installed;\nFCM.getPlugin = IonicNativePlugin.getPlugin;\nFCM.getPluginName = IonicNativePlugin.getPluginName;\nFCM.getPluginRef = IonicNativePlugin.getPluginRef;\nFCM.getPluginInstallName = IonicNativePlugin.getPluginInstallName;\nFCM.getSupportedPlatforms = IonicNativePlugin.getSupportedPlatforms;\nFCM = __decorate([Injectable()], FCM);\nexport { FCM };","map":{"version":3,"sources":["C:/dP-It/app/ionic/apps/ionic4-push/node_modules/cordova-plugin-fcm-with-dependecy-updated/ionic/ngx/FCM.js"],"names":["__decorate","Injectable","Subject","IonicNativePlugin","FCM","prototype","clearAllNotifications","window","createNotificationChannel","channelConfig","getAPNSToken","getInitialPushPayload","getToken","hasPermission","onNotification","options","observable","handler","payload","next","onTokenRefresh","token","requestPushPermission","subscribeToTopic","topic","unsubscribeFromTopic","pluginName","plugin","pluginRef","repo","platforms","installed","getPlugin","getPluginName","getPluginRef","getPluginInstallName","getSupportedPlatforms"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib'\nimport { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs'\nimport { IonicNativePlugin } from '@ionic-native/core'\n\nfunction FCM() {}\nFCM.prototype.clearAllNotifications = function () {\n    return window.FCM.clearAllNotifications()\n}\nFCM.prototype.createNotificationChannel = function (channelConfig) {\n    return window.FCM.createNotificationChannel(channelConfig)\n}\nFCM.prototype.getAPNSToken = function () {\n    return window.FCM.getAPNSToken()\n}\nFCM.prototype.getInitialPushPayload = function () {\n    return window.FCM.getInitialPushPayload()\n}\nFCM.prototype.getToken = function () {\n    return window.FCM.getToken()\n}\nFCM.prototype.hasPermission = function () {\n    return window.FCM.hasPermission()\n}\nFCM.prototype.onNotification = function (options) {\n    var observable = new Subject()\n    var handler = function (payload) {\n        return observable.next(payload)\n    }\n    window.FCM.onNotification(handler, options)\n    return observable\n}\nFCM.prototype.onTokenRefresh = function (options) {\n    var observable = new Subject()\n    window.FCM.onTokenRefresh(function (token) {\n        return observable.next(token)\n    }, options)\n    return observable\n}\nFCM.prototype.requestPushPermission = function (options) {\n    return window.FCM.requestPushPermission(options)\n}\nFCM.prototype.subscribeToTopic = function (topic) {\n    return window.FCM.subscribeToTopic(topic)\n}\nFCM.prototype.unsubscribeFromTopic = function (topic) {\n    return window.FCM.unsubscribeFromTopic(topic)\n}\nFCM.pluginName = 'FCM'\nFCM.plugin = 'cordova-plugin-fcm-with-dependecy-updated'\nFCM.pluginRef = 'FCM'\nFCM.repo = 'https://github.com/andrehtissot/cordova-plugin-fcm-with-dependecy-updated'\nFCM.platforms = ['Android', 'iOS']\nFCM.installed = IonicNativePlugin.installed\nFCM.getPlugin = IonicNativePlugin.getPlugin\nFCM.getPluginName = IonicNativePlugin.getPluginName\nFCM.getPluginRef = IonicNativePlugin.getPluginRef\nFCM.getPluginInstallName = IonicNativePlugin.getPluginInstallName\nFCM.getSupportedPlatforms = IonicNativePlugin.getSupportedPlatforms\nFCM = __decorate([Injectable()], FCM)\n\nexport { FCM }\n"]},"metadata":{},"sourceType":"module"}