{"ast":null,"code":"import _defineProperty from \"C:/dP-It/app/ionic/apps/dP Tennismanager/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/dP-It/app/ionic/apps/dP Tennismanager/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/dP-It/app/ionic/apps/dP Tennismanager/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-44bf8136.js';\nimport { b as getIonMode } from './ionic-global-837be8f3.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-3f0b0c04.js';\nvar checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\nvar checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nvar Checkbox = /*#__PURE__*/function () {\n  function Checkbox(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Checkbox);\n\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = \"ion-cb-\".concat(checkboxIds++);\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n\n    this.value = 'on';\n\n    this.onClick = function () {\n      _this.setFocus();\n\n      _this.checked = !_this.checked;\n      _this.indeterminate = false;\n    };\n\n    this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"checkedChanged\",\n    value: function checkedChanged(isChecked) {\n      this.ionChange.emit({\n        checked: isChecked,\n        value: this.value\n      });\n      this.emitStyle();\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        'checkbox-checked': this.checked,\n        'interactive-disabled': this.disabled\n      });\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus() {\n      if (this.buttonEl) {\n        this.buttonEl.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _Object$assign,\n          _this2 = this;\n\n      var inputId = this.inputId,\n          indeterminate = this.indeterminate,\n          disabled = this.disabled,\n          checked = this.checked,\n          value = this.value,\n          color = this.color,\n          el = this.el;\n      var labelId = inputId + '-lbl';\n      var mode = getIonMode(this);\n      var label = findItemLabel(el);\n\n      if (label) {\n        label.id = labelId;\n      }\n\n      renderHiddenInput(true, el, this.name, checked ? value : '', disabled);\n      var path = indeterminate ? h(\"path\", {\n        d: \"M6 12L18 12\",\n        part: \"mark\"\n      }) : h(\"path\", {\n        d: \"M5.9,12.5l3.8,3.8l8.8-8.8\",\n        part: \"mark\"\n      });\n\n      if (mode === 'md') {\n        path = indeterminate ? h(\"path\", {\n          d: \"M2 12H22\",\n          part: \"mark\"\n        }) : h(\"path\", {\n          d: \"M1.73,12.91 8.1,19.28 22.79,4.59\",\n          part: \"mark\"\n        });\n      }\n\n      return h(Host, {\n        onClick: this.onClick,\n        role: \"checkbox\",\n        \"aria-disabled\": disabled ? 'true' : null,\n        \"aria-checked\": \"\".concat(checked),\n        \"aria-labelledby\": labelId,\n        class: Object.assign(Object.assign({}, createColorClasses(color)), (_Object$assign = {}, _defineProperty(_Object$assign, mode, true), _defineProperty(_Object$assign, 'in-item', hostContext('ion-item', el)), _defineProperty(_Object$assign, 'checkbox-checked', checked), _defineProperty(_Object$assign, 'checkbox-disabled', disabled), _defineProperty(_Object$assign, 'checkbox-indeterminate', indeterminate), _defineProperty(_Object$assign, 'interactive', true), _Object$assign))\n      }, h(\"svg\", {\n        class: \"checkbox-icon\",\n        viewBox: \"0 0 24 24\",\n        part: \"container\"\n      }, path), h(\"button\", {\n        type: \"button\",\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        disabled: this.disabled,\n        ref: function ref(btnEl) {\n          return _this2.buttonEl = btnEl;\n        }\n      }));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }]);\n\n  return Checkbox;\n}();\n\nvar checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\nexport { Checkbox as ion_checkbox };","map":{"version":3,"sources":["C:/dP-It/app/ionic/apps/dP Tennismanager/node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","f","findItemLabel","a","renderHiddenInput","c","createColorClasses","hostContext","checkboxIosCss","checkboxMdCss","Checkbox","hostRef","ionChange","ionFocus","ionBlur","ionStyle","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","setFocus","onFocus","emit","onBlur","emitStyle","isChecked","buttonEl","focus","color","el","labelId","mode","label","id","path","d","part","role","class","Object","assign","viewBox","type","ref","btnEl","style","ios","md","ion_checkbox"],"mappings":";;;AAAA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,WAArC,EAAkDC,CAAlD,EAAqDC,CAAC,IAAIC,IAA1D,EAAgEC,CAAC,IAAIC,UAArE,QAAuF,qBAAvF;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,4BAAhC;AACA,SAASC,CAAC,IAAIC,aAAd,EAA6BC,CAAC,IAAIC,iBAAlC,QAA2D,uBAA3D;AACA,SAASC,CAAC,IAAIC,kBAAd,EAAkCZ,CAAC,IAAIa,WAAvC,QAA0D,qBAA1D;AAEA,IAAMC,cAAc,GAAG,2jFAAvB;AAEA,IAAMC,aAAa,GAAG,ssFAAtB;;AAEA,IAAMC,QAAQ;AACV,oBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjBpB,IAAAA,gBAAgB,CAAC,IAAD,EAAOoB,OAAP,CAAhB;AACA,SAAKC,SAAL,GAAiBnB,WAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;AACA,SAAKoB,QAAL,GAAgBpB,WAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA,SAAKqB,OAAL,GAAerB,WAAW,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,CAA1B;AACA,SAAKsB,QAAL,GAAgBtB,WAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA,SAAKuB,OAAL,oBAAyBC,WAAW,EAApC;AACA;;;;AAGA,SAAKC,IAAL,GAAY,KAAKF,OAAjB;AACA;;;;AAGA,SAAKG,OAAL,GAAe,KAAf;AACA;;;;AAGA,SAAKC,aAAL,GAAqB,KAArB;AACA;;;;AAGA,SAAKC,QAAL,GAAgB,KAAhB;AACA;;;;;;;;AAOA,SAAKC,KAAL,GAAa,IAAb;;AACA,SAAKC,OAAL,GAAe,YAAM;AACjB,MAAA,KAAI,CAACC,QAAL;;AACA,MAAA,KAAI,CAACL,OAAL,GAAe,CAAC,KAAI,CAACA,OAArB;AACA,MAAA,KAAI,CAACC,aAAL,GAAqB,KAArB;AACH,KAJD;;AAKA,SAAKK,OAAL,GAAe,YAAM;AACjB,MAAA,KAAI,CAACZ,QAAL,CAAca,IAAd;AACH,KAFD;;AAGA,SAAKC,MAAL,GAAc,YAAM;AAChB,MAAA,KAAI,CAACb,OAAL,CAAaY,IAAb;AACH,KAFD;AAGH;;AA3CS;AAAA;AAAA,wCA4CU;AAChB,WAAKE,SAAL;AACH;AA9CS;AAAA;AAAA,mCA+CKC,SA/CL,EA+CgB;AACtB,WAAKjB,SAAL,CAAec,IAAf,CAAoB;AAChBP,QAAAA,OAAO,EAAEU,SADO;AAEhBP,QAAAA,KAAK,EAAE,KAAKA;AAFI,OAApB;AAIA,WAAKM,SAAL;AACH;AArDS;AAAA;AAAA,sCAsDQ;AACd,WAAKA,SAAL;AACH;AAxDS;AAAA;AAAA,gCAyDE;AACR,WAAKb,QAAL,CAAcW,IAAd,CAAmB;AACf,4BAAoB,KAAKP,OADV;AAEf,gCAAwB,KAAKE;AAFd,OAAnB;AAIH;AA9DS;AAAA;AAAA,+BA+DC;AACP,UAAI,KAAKS,QAAT,EAAmB;AACf,aAAKA,QAAL,CAAcC,KAAd;AACH;AACJ;AAnES;AAAA;AAAA,6BAoED;AAAA;AAAA;;AAAA,UACGf,OADH,GACmE,IADnE,CACGA,OADH;AAAA,UACYI,aADZ,GACmE,IADnE,CACYA,aADZ;AAAA,UAC2BC,QAD3B,GACmE,IADnE,CAC2BA,QAD3B;AAAA,UACqCF,OADrC,GACmE,IADnE,CACqCA,OADrC;AAAA,UAC8CG,KAD9C,GACmE,IADnE,CAC8CA,KAD9C;AAAA,UACqDU,KADrD,GACmE,IADnE,CACqDA,KADrD;AAAA,UAC4DC,EAD5D,GACmE,IADnE,CAC4DA,EAD5D;AAEL,UAAMC,OAAO,GAAGlB,OAAO,GAAG,MAA1B;AACA,UAAMmB,IAAI,GAAGnC,UAAU,CAAC,IAAD,CAAvB;AACA,UAAMoC,KAAK,GAAGlC,aAAa,CAAC+B,EAAD,CAA3B;;AACA,UAAIG,KAAJ,EAAW;AACPA,QAAAA,KAAK,CAACC,EAAN,GAAWH,OAAX;AACH;;AACD9B,MAAAA,iBAAiB,CAAC,IAAD,EAAO6B,EAAP,EAAW,KAAKf,IAAhB,EAAuBC,OAAO,GAAGG,KAAH,GAAW,EAAzC,EAA8CD,QAA9C,CAAjB;AACA,UAAIiB,IAAI,GAAGlB,aAAa,GAClB1B,CAAC,CAAC,MAAD,EAAS;AAAE6C,QAAAA,CAAC,EAAE,aAAL;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAAT,CADiB,GAElB9C,CAAC,CAAC,MAAD,EAAS;AAAE6C,QAAAA,CAAC,EAAE,2BAAL;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAT,CAFP;;AAGA,UAAIL,IAAI,KAAK,IAAb,EAAmB;AACfG,QAAAA,IAAI,GAAGlB,aAAa,GACd1B,CAAC,CAAC,MAAD,EAAS;AAAE6C,UAAAA,CAAC,EAAE,UAAL;AAAiBC,UAAAA,IAAI,EAAE;AAAvB,SAAT,CADa,GAEd9C,CAAC,CAAC,MAAD,EAAS;AAAE6C,UAAAA,CAAC,EAAE,kCAAL;AAAyCC,UAAAA,IAAI,EAAE;AAA/C,SAAT,CAFP;AAGH;;AACD,aAAQ9C,CAAC,CAACE,IAAD,EAAO;AAAE2B,QAAAA,OAAO,EAAE,KAAKA,OAAhB;AAAyBkB,QAAAA,IAAI,EAAE,UAA/B;AAA2C,yBAAiBpB,QAAQ,GAAG,MAAH,GAAY,IAAhF;AAAsF,kCAAmBF,OAAnB,CAAtF;AAAoH,2BAAmBe,OAAvI;AAAgJQ,QAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtC,kBAAkB,CAAC0B,KAAD,CAApC,CAAd,wDAA+DG,IAA/D,EAAsE,IAAtE,mCAA4E,SAA5E,EAAuF5B,WAAW,CAAC,UAAD,EAAa0B,EAAb,CAAlG,mCAAoH,kBAApH,EAAwId,OAAxI,mCAAiJ,mBAAjJ,EAAsKE,QAAtK,mCAAgL,wBAAhL,EAA0MD,aAA1M,mCAAyN,aAAzN,EAAwO,IAAxO;AAAvJ,OAAP,EAAiZ1B,CAAC,CAAC,KAAD,EAAQ;AAAEgD,QAAAA,KAAK,EAAE,eAAT;AAA0BG,QAAAA,OAAO,EAAE,WAAnC;AAAgDL,QAAAA,IAAI,EAAE;AAAtD,OAAR,EAA6EF,IAA7E,CAAlZ,EAAse5C,CAAC,CAAC,QAAD,EAAW;AAAEoD,QAAAA,IAAI,EAAE,QAAR;AAAkBrB,QAAAA,OAAO,EAAE,KAAKA,OAAhC;AAAyCE,QAAAA,MAAM,EAAE,KAAKA,MAAtD;AAA8DN,QAAAA,QAAQ,EAAE,KAAKA,QAA7E;AAAuF0B,QAAAA,GAAG,EAAE,aAAAC,KAAK;AAAA,iBAAI,MAAI,CAAClB,QAAL,GAAgBkB,KAApB;AAAA;AAAjG,OAAX,CAAve,CAAT;AACH;AAtFS;AAAA;AAAA,wBAuFD;AAAE,aAAOlD,UAAU,CAAC,IAAD,CAAjB;AAA0B;AAvF3B;AAAA;AAAA,wBAwFY;AAAE,aAAO;AAC3B,mBAAW,CAAC,gBAAD,CADgB;AAE3B,oBAAY,CAAC,iBAAD;AAFe,OAAP;AAGpB;AA3FM;;AAAA;AAAA,GAAd;;AA6FA,IAAImB,WAAW,GAAG,CAAlB;AACAP,QAAQ,CAACuC,KAAT,GAAiB;AACbC,EAAAA,GAAG,EAAE1C,cADQ;AAEb2C,EAAAA,EAAE,EAAE1C;AAFS,CAAjB;AAKA,SAASC,QAAQ,IAAI0C,YAArB","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-44bf8136.js';\nimport { b as getIonMode } from './ionic-global-837be8f3.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-3f0b0c04.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            this.setFocus();\n            this.checked = !this.checked;\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, indeterminate, disabled, checked, value, color, el } = this;\n        const labelId = inputId + '-lbl';\n        const mode = getIonMode(this);\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        let path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'checkbox-checked': checked, 'checkbox-disabled': disabled, 'checkbox-indeterminate': indeterminate, 'interactive': true }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n    ios: checkboxIosCss,\n    md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"]},"metadata":{},"sourceType":"module"}